/*
 * SCDCPAJUv3
 * # This is a SCDCPAJUv3 server spec You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pinbal@fundaciobit.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package es.caib.scsp.api.cedent.client.SCDCPAJUv3.api;

import es.caib.scsp.api.cedent.client.SCDCPAJUv3.model.DatosPersonales;
import es.caib.scsp.api.cedent.client.SCDCPAJUv3.model.Documentacion;
import es.caib.scsp.api.cedent.client.SCDCPAJUv3.model.ModelApiResponse;
import es.caib.scsp.api.cedent.client.SCDCPAJUv3.model.Resultado;
import es.caib.scsp.api.cedent.client.SCDCPAJUv3.model.Solicitud;
import es.caib.scsp.api.cedent.client.SCDCPAJUv3.model.Titular;
import es.caib.scsp.api.cedent.client.SCDCPAJUv3.services.ApiClient;
import java.nio.charset.StandardCharsets;
import org.junit.Test;
import org.junit.Ignore;

import org.springframework.util.Base64Utils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ws.rs.ProcessingException;
import javax.ws.rs.core.HttpHeaders;
import static org.junit.Assert.assertNotNull;


/**
 * API tests for ScdcpajUv3Api
 */
@Ignore
public class ScdcpajUv3ApiTest {

    private final ScdcpajUv3Api api = new ScdcpajUv3Api();

    /**
     * Realitza una consulta al cedent
     *
     * Realitza una consulta al cedent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void peticionSincronaTest() throws Exception {
        
        
        ApiClient apiClient =  api.getApiClient();

        apiClient.setBasePath("http://pinbalcedent:8580/pinbal-services/rest");

        apiClient.setDebugging(true);

        String usuari = "pinbal";
        String secret = "!puW6PHUQC%c";

        String userpass = usuari.concat(":").concat(secret);

        apiClient.addDefaultHeader(HttpHeaders.AUTHORIZATION, "Basic " + Base64Utils.encodeToString(userpass.getBytes(StandardCharsets.UTF_8)));

         Solicitud body = new Solicitud();
        
        String provinciaSolicitud = "7";
        String municipioSolicitud = "26";
        
        body.setProvinciaSolicitud(provinciaSolicitud);
        body.setMunicipioSolicitud(municipioSolicitud);
        
        DatosPersonales datosPersonales = new DatosPersonales();
        Documentacion documentacion = new Documentacion();
        
        
        Documentacion.TipoEnum tipo = Documentacion.TipoEnum.NIF;
        String valor = "41438576M";
        
        documentacion.setTipo(tipo);
        documentacion.setValor(valor);
        
        System.out.println(datosPersonales);
        
        Titular titular;
        titular = new Titular();
        titular.setDocumentacion(documentacion);
        
        System.out.println(titular);
        
        body.setTitular(titular);
        
        assertNotNull(body);
        assertNotNull(titular);
        
        Resultado response = null;
       
        try {
            response = api.peticionSincrona(body);
            System.out.println(response.toString());
        } catch (ProcessingException ex) {
            Logger.getLogger(ScdcpajUv3ApiTest.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("No identificat");
        }


        
    }
}
